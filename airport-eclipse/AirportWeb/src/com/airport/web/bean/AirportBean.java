package com.airport.web.bean;import java.io.Serializable;import java.util.List;import java.util.ArrayList;import java.util.UUID;import java.lang.Integer;import javax.annotation.PostConstruct;import javax.ejb.EJB;import javax.faces.bean.ManagedBean;import javax.faces.bean.ViewScoped;import com.airport.model.Airplane;import com.airport.model.Runway;import com.airport.session.AirportEJB;import com.airport.model.ParkingPosition;@ManagedBean(name="airportBean")@ViewScopedpublic class AirportBean implements Serializable {	private static final long serialVersionUID = 1665363412715858198L;	@EJB	private AirportEJB airportEJB;	private String debug = "";	private Airplane airplane;	private Runway runway;	private ParkingPosition parkingPosition;	private String airplaneId = "a";	private String runwayId = "a";	private String parkingPositionId = "a";	public AirportBean() {		System.out.println("AIRPORT: " + UUID.randomUUID());	}		@PostConstruct	private void init() {		airplane = new Airplane();		for(int i = 1; i<=4; i++){			if(!airportEJB.runwayExists(i)){				runway = new Runway(i);				airportEJB.storeRunway(runway);			}		}				for(int i = 1; i<=8; i++){			if(!airportEJB.parkingPositionExists(i)){				parkingPosition = new ParkingPosition(i);				airportEJB.storeParkingPosition(parkingPosition);			}		}	}	//Airplane	public List<Airplane> getAirplanes() {		return airportEJB.getAirplanes();	}		public Airplane getAirplane() {		return airplane;	}		public String getAirplaneId() {		return airplaneId;	}		public void setAirplaneId(String id) {		this.airplaneId = id;	}	public List<Airplane> getAirplanesWithoutRunway() {		return airportEJB.getAirplanesWithoutRunway();	}	public List<Airplane> getAirplanesWithoutParkingPosition() {		return airportEJB.getAirplanesWithoutParkingPosition();	}	public List<String> getAirplaneNames(){		List<Airplane> airplanes = getAirplanes();		List<String> names = new ArrayList<String>();		for(int i = 0; i<airplanes.size(); i++){			names.add(airplanes.get(i).getName());		}		return names;	}	public List<String> getAirplaneIds(){		List<Airplane> airplanes = getAirplanes();		List<String> ids = new ArrayList<String>();		for(int i = 0; i<airplanes.size(); i++){			ids.add(String.valueOf(airplanes.get(i).getId()));		}		return ids;	}	public List<String> getAirplaneIdsWithoutRunway() {		List<Airplane> airplanes = getAirplanesWithoutRunway();		List<String> ids = new ArrayList<String>();		for(int i = 0; i<airplanes.size(); i++){			ids.add(String.valueOf(airplanes.get(i).getId()));		}		return ids;	}	public List<String> getAirplaneIdsWithoutParkingPosition() {		List<Airplane> airplanes = getAirplanesWithoutParkingPosition();		List<String> ids = new ArrayList<String>();		for(int i = 0; i<airplanes.size(); i++){			ids.add(String.valueOf(airplanes.get(i).getId()));		}		return ids;	}		public void store() {		airportEJB.store(airplane);		airplane = new Airplane();	}	//Runway	public List<String> getFreeRunwayIds(){		List<Runway> runways = getFreeRunways();		List<String> ids = new ArrayList<String>();		for(int i=0; i<runways.size(); i++){			ids.add(String.valueOf(runways.get(i).getrunwayNo()));		}		return ids;	}	public List<Runway> getFreeRunways(){		return airportEJB.getFreeRunways();	}		public List<Runway> getRunways() {		return airportEJB.getRunways();	}	public Runway getRunway() {		return runway;	}			public String getRunwayId() {		return runwayId;	}		public void setRunwayId(String id) {		this.runwayId = id;	}	public String getDebug(){			return debug;	}			//Airplane on Runway	public void saveAirplaneRunway() {		if (airplaneId != "a" && runwayId != "a") {		int aid = Integer.parseInt(airplaneId);		int rid = Integer.parseInt(runwayId);		airportEJB.saveAirplaneRunway(aid,rid);		}	}	//Airplane on Parking Position	public void saveAirplaneParkingPosition() {		if (airplaneId != "a" && parkingPositionId != "a") {		int aid = Integer.parseInt(airplaneId);		int ppid = Integer.parseInt(parkingPositionId);		airportEJB.saveAirplaneParkingPosition(aid,ppid);		}	}		//ParkingPosition	public List<String> getFreeParkingPositionIds(){		List<ParkingPosition> parkingPosition = getFreeParkingPositions();		List<String> ids = new ArrayList<String>();		for(int i=0; i<parkingPosition.size(); i++){			ids.add(String.valueOf(parkingPosition.get(i).getparkingPositionNo()));		}		return ids;	}		public List<ParkingPosition> getFreeParkingPositions(){		return airportEJB.getFreeParkingPositions();	}		public List<ParkingPosition> getParkingPositions() {		return airportEJB.getParkingPositions();	}	public ParkingPosition getParkingPosition() {		return parkingPosition;	}			public String getParkingPositionId() {		return parkingPositionId;	}		public void setparkingPositionId(String id) {		this.parkingPositionId = id;	}}